#!/bin/bash
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
light_cyan='\033[1;96m'
reset='\033[0m'
#####
PS3=' - Your Choose: '
entries=("Continue run Kali-Linux" "Reinstall Kali-Linux" "Backup Image" "Restore Image" "Wipe data" "Uninstall Kali-Linux" "Exit")
while [ "$menu" != 1 ]; do
	clear
	printf "${green}\n  @ Recovery Menu:\n\n"
	select choice in "${entries[@]}"
	do 
		case $choice in
			"Continue run Kali-Linux")
				clear
				kali
				menu=1
				exit 0
				;;
			"Reinstall Kali-Linux")
				clear
		  	printf "${red}\n  @ Recovery Menu:\n\n"
				printf "${green} -> Reinstall Kali-Linux \n\n"
				printf "${yellow} @ Reinstall will erase current Kali-Linux\n\n"
				read -r -p "Are you sure to reinstall Kali-Linux? [Y/N] " response
				printf "%b\n" " "
				case "$response" in
					[yY][eE][sS]|[yY]) 
						cd $HOME
						rm -rf kali-arm64
						wget -O kali-khanhnguyen.sh https://tinyurl.com/ybw4xpmz
						chmod +x ~/kali-khanhnguyen.sh
						sh ~/kali-khanhnguyen.sh && echo "Process ended!"
						printf "%b" "\n\n"
						;;
					*)
						;;
				esac
				break
				;;
			"Backup Image")  
				clear
				printf "${red}\n  @ Recovery Menu:\n\n"
				printf "${green} -> Backup Image \n\n"
				printf "${yellow} @ Default location backup is /sdcard \n\n"
				printf "${yellow} @@ High level may take a long time, recommend is 6 \n\n"
				read -p "Compress level (0-9): " level
                printf "%b\n" "\n-----------------\n\n"
				printf "${blue} Target Backup: /sdcard/kali-arm64-backup.tar.xz \n"
				printf "${blue} Target sha512sum: /sdcard/kali-arm64-backup.tar.xz \n\n"
				read -r -p "Are you sure to backup image? [Y/N] " response
				printf "%b\n" " "
				case "$response" in
					[yY][eE][sS]|[yY]) 
						cd $HOME
						XZ_OPT=-$level tar cJf - ~/kali-arm64 -P | pv -s $(du -sb kali-arm64 | awk '{print $1}') | gzip > /sdcard/kali-arm64-backup.tar.xz && echo "- Done backup image"
							cd /sdcard
							sha512sum kali-arm64-backup.tar.xz > kali-arm64-backup.sha512sum && echo "- Done backup sha512sum"
							cd $HOME
							printf "%b\n" " ${yellow} - Completed Backup Image! \n"
							read -p " Press any key and Enter to exit" anykey
							;;
						*)
							;;
				esac
				break
				;;
			"Restore Image")
                clear
				printf "${red}\n  @ Recovery Menu:\n\n"
                printf "${green} -> Restore Image \n\n"
                printf "${yellow} @ Please move Image to /sdcard and enter name file \n\n"
				printf "${yellow}  @@ Example your file in /sdcard/kali-arm64.tar.xz \n"
                printf "${yellow}  @@ Enter name image: kali-arm64.tar.xz \n"
                printf "${yellow}  @@ Enter name sha512sum: kali-arm64.sha512sum \n\n\n"
                printf "${red}   @@@ Restore image is unstable, may have some error after restore @@@ \n\n\n"
                read -p "Enter Full name image: " restoreimage
                read -p "Enter Full name sha512sum: " sha512sumfile
                printf "%b\n" "\n-----------------\n\n"
				printf "${blue} Target Image: /sdcard/$restoreimage \n"
				printf "${blue} Target sha512sum: /sdcard/$sha512sumfile \n\n"
				printf "${red}  @@@ Restore Image will erase current data! \n\n"
                read -r -p "Are you sure to restore image? [Y/N] " response
                case "$response" in
                      [yY][eE][sS]|[yY]) 
                             printf "%b\n" "${yellow}\n -- Restore Image is in progress, please wait.... \n"
							 cd /sdcard
                             sha512sum -c /sdcard/$sha512sumfile || {
                                 printf "${red}\n @@ Restore image corrupted! Exit now... \n\n"
                                 menu=1
                                 exit 0
                             } && echo "- Done check sha512sum!"
							 printf "${yellow}\n Restoring image...."
                             cd $HOME
                             rm -rf ~/kali-arm64 2> /dev/null
                             proot --link2symlink tar -xf /sdcard/$restoreimage 2> /dev/null || : && echo "- Done restore image"
							 NH_LAUNCHER=${PREFIX}/bin/kali
							 cat > $NH_LAUNCHER <<- EOF
#!/data/data/com.termux/files/usr/bin/bash -e
cd \${HOME}
unset LD_PRELOAD
if [ ! -f $CHROOT/root/.version ]; then
    touch $CHROOT/root/.version
fi

user="$USERNAME"
home="/home/\$user"
start="sudo -u kali /bin/bash"

if grep -q "kali" ${CHROOT}/etc/passwd; then
    KALIUSR="1";
else
    KALIUSR="0";
fi
if [[ \$KALIUSR == "0" || ("\$#" != "0" && ("\$1" == "-r" || "\$1" == "-R")) ]];then
    user="root"
    home="/\$user"
    start="/bin/bash --login"
    if [[ "\$#" != "0" && ("\$1" == "-r" || "\$1" == "-R") ]];then
        shift
    fi
fi

cmdline="proot \\
        --link2symlink \\
        -0 \\
        -r $CHROOT \\
        -b /dev \\
        -b /sdcard \\
		-b /system \\
        -b /proc \\
        -b $CHROOT\$home:/dev/shm \\
        -w \$home \\
           /usr/bin/env -i \\
           HOME=\$home \\
           PATH=/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin \\
           TERM=\$TERM \\
           LANG=C.UTF-8 \\
           \$start"

cmd="\$@"
if [ "\$#" == "0" ];then
    exec \$cmdline
else
    \$cmdline -c "\$cmd"
fi
EOF

							 chmod 700 $NH_LAUNCHER
							 chmod 700 $KEX_LAUNCHER
							 if [ -f ${CHROOT}/root/.bash_profile ]; then
								 sed -i '/if/,/fi/d' "${CHROOT}/root/.bash_profile"
							 fi
							 chmod +s $CHROOT/usr/bin/sudo
							 chmod +s $CHROOT/usr/bin/su
                             printf "%b\n\n" " Completed restore image! \n"
                             read -p "Press any key and Enter to exit" anykey
                             ;;
                       *)
                             ;;
                esac
                break
                ;;
            "Wipe data")
                clear
				printf "${red}\n  @ Recovery Menu:\n\n"
                printf "${green} -> Wipe data \n\n"
                printf "${red} @ WARNING: Wipe data will factory reset users Kali-Linux! \n"
                printf "${red} @ You need backup Image before user this! \n\n\n"
                printf "${red}  @@@ Wipe data is in development and then not allow you use this @@@ \n\n\n"
                read -r -p "Are you sure to wipe data? [Y/N] " response
                case "$response" in
                      [aA][bB][zZ]|[aA]) 
							 cd $HOME
                             rm -rf ~/kali-arm64/home
                             mkdir ~/kali-arm64/home
                             printf "%b\n" "${yellow} Completed wipe data! \n"
                             read -p " Press any key and Enter to exit" anykey
                             ;;
                       *)
                             ;;
                esac
                break
                ;;
            "Uninstall Kali-Linux")
                clear
				printf "${red}\n  @ Recovery Menu:\n\n"
                printf "${green} -> Uninstall Kali-Linux \n\n"
                printf "${red} @ WARNING: Uninstall will remove Kali-Linux! \n"
                read -r -p "Are you sure to uninstall Kali? [Y/N] " response
                case "$response" in
                      [yY][eE][sS]|[yY]) 
							 cd $HOME
                             rm -rf ~/kali-arm64
							 cd ..
							 cd usr
							 cd bin
                             rm -f kali
                             printf "%b\n" "${yellow} Completed uninstall Kali-Linux/Recovery! \n"
                             printf "%b\n" "${yellow} Recovery mode will now exit! \n"
                             rm -f recovery
                             menu=1
                             exit 0
                             ;;
                       *)
                             ;;
                esac
                break
                ;;
            "Exit" )
				clear
				printf "%b\n" "${green} \n\n - Good bye! \n"
                menu=1
				exit 0
                ;;
            * )
                break
                ;;
        esac
    done
done
exit 0
