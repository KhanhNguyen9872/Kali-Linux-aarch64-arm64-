#!/bin/bash
clear
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
light_cyan='\033[1;96m'
reset='\033[0m'
clear
echo "- Booting into Recovery Mode...."
khanhnguyen="v1.0"
cd $HOME
wget -O version https://tinyurl.com/53n7htrn 2> /dev/null && echo "- Preparing..."
wget -O versionrecovery https://tinyurl.com/fvcj5463 2> /dev/null && echo "- Booting..."
if [ -f version ]; then
	update="$(grep '' './version')"
fi
if [ -f versionrecovery ]; then
	updaterecovery="$(grep '' './versionrecovery')"
fi
cd ..
if [ -f usr/bin/version ]; then
	ver="$(grep '' 'usr/bin/version')"
fi
if [ -f usr/bin/versionrecovery ]; then
	verrecovery="$(grep '' 'usr/bin/versionrecovery')"
fi
cd
clear
sleep 0.5
echo " @ RECOVERY MODE"
printf "${green}\n - Checking for updates Kali.... \n"
sleep 0.5
if [ -f version ]; then
	echo '1' > /dev/null
else
	printf "${red}\n No connection are available! \n"
fi
cd ..
cd home 2> /dev/null
cd kali-arm64 2> /dev/null
cd bin 2> /dev/null
if [ -f cp ]; then
	cd
	cd ..
	if [ -f usr/bin/version ]; then
		echo '1' > /dev/null
	else
		if [ -f usr/bin/versionrestore ]; then
			printf "${yellow}\n Custom Image is detected! Not Official! \n"
			custom=1
		else
			printf "${red}\n Can't detect version Recovery! \n"
		fi
	fi
else
	cd
	cd ..
	cd ..
	cd bin 2> /dev/null
	if [ -f cp ]; then
		printf "${yellow}\n Detected installed on unknown location!\n"
		printf "${yellow}\n Recovery will now exit!\n"
		exit 0
	else
		printf "${red}\n Kali-Linux is not installed! \n"
	fi
fi
cd $HOME
if [[ $ver -ge $update ]]; then
	printf "${green} - No updates Kali are available!\n\n"
	rm -f version
else
	if [[ custom -eq 1 ]]; then
		rm -f version
		printf "${green} Skip check for update! \n\n"
	else
		rm -f version
		printf "${yellow} - New updates Kali are available!\n"
		printf "${yellow} - New version: $update \n"
		printf "${yellow} - Update will keep your personal data! \n\n"
		printf "${light_cyan}\n - Do you want to install it now? [Y/N] \n"
		read -r -p "Your choose: " response
		printf "%b\n" " "
		case "$response" in
			[y]|[Y]) 
				cd $HOME
				printf "%b\n" "${yellow} - Updating... \n"
				wget -O kali-khanhnguyenup.sh https://tinyurl.com/9fzu2ex9 2> /dev/null
				wget -O version https://tinyurl.com/53n7htrn 2> /dev/null
				chmod +x ~/kali-khanhnguyenup.sh 2> /dev/null
				sh ~/kali-khanhnguyenup.sh && echo "Process ended!"
				printf "%b" "\n\n"
				rm -f ~/kali-khanhnguyenup.sh 2> /dev/null
				;;
			*)
				;;
		esac
	fi
fi
echo "=============================="
printf "${green}\n - Checking for updates Recovery.... \n"
sleep 0.5
if [ -f versionrecovery ]; then
	echo '1' > /dev/null
else
	printf "${red}\n No connection are available! \n"
fi
cd ..
if [ -f usr/bin/versionrecovery ]; then
	echo '1' > /dev/null
else
	printf "${red}\n Can't detect version Recovery! \n"
fi
cd $HOME
if [[ $verrecovery -ge $updaterecovery ]]; then
	printf "${green} - No updates Recovery are available!\n"
	rm -f versionrecovery
	sleep 3
else
	rm -f versionrecovery
	printf "${yellow} - New updates Recovery are available!\n"
	printf "${yellow} - New version: $updaterecovery \n\n"
	printf "${light_cyan}\n - Do you want to install it now? [Y/N] \n"
	read -r -p "Your choose: " response
	printf "%b\n" " "
	case "$response" in
		[y]|[Y]) 
			printf "%b\n" "${yellow} - Updating... \n"
			cd $HOME
			wget -O recovery https://tinyurl.com/542f74rn 2> /dev/null
			wget -O versionrecovery https://tinyurl.com/fvcj5463 2> /dev/null
			cd ..
			mv home/recovery usr/bin/recovery
			mv home/versionrecovery usr/bin/versionrecovery
			chmod 777 usr/bin/recovery
			chmod 777 usr/bin/versionrecovery
			if [ -f usr/bin/recovery ]; then
				if [ -f usr/bin/versionrecovery ]; then
					cd $HOME
					printf "%b\n\n" "${green} - Update successfully! \n"
					printf "${green} - Run recovery again! \n\n"
					exit 0
				else
					printf "%b\n\n" "${red} - Update failed! \n"
					printf "${red} - Try again later! \n"
					read -p " Press Enter to continue " anykey
				fi
			else
				printf "%b\n\n" "${red} - Update failed! \n"
				printf "${red} - Try again later! \n"
				read -p " Press Enter to continue " anykey
			fi
			;;
		*)
			;;
	esac
fi
#####
PS3=' - Your Choose: '
entries=("Continue run Kali-Linux" "Reinstall Kali-Linux" "Backup Image" "Restore Image" "KhanhNguyen9872" "Uninstall Kali-Linux" "Exit")
while [ "$menu" != 1 ]; do
	clear
	printf "${green}\n  @ RECOVERY MENU \n"
	printf "${green}  @ Version: $khanhnguyen \n\n"
	select choice in "${entries[@]}"
	do 
		case $choice in
			"Continue run Kali-Linux")
				clear
				cd
				cd kali-arm64 2> /dev/null
				cd bin 2> /dev/null
				if [ -f cp ]; then
					kali
					menu=1
					exit 0
				else
					clear
					printf "${green}\n  @ RECOVERY MENU \n\n"
					printf "${green} -> Booting System... \n\n"
					printf "${red}\n Kali-Linux is not installed! \n\n"
					printf "${red} Please install Kali first! \n\n ${reset}"
					read -p " Press Enter to exit " anykey
				fi
				break
				;;
			"Reinstall Kali-Linux")
				clear
				printf "${green}\n  @ RECOVERY MENU \n\n"
				printf "${green} -> Reinstall Kali-Linux \n\n"
				printf "${yellow} 1. Reinstall with Keep your data\n"
				printf "${yellow} 2. Reinstall with Lost your data\n"
				printf "${yellow} 3. Return to menu\n"
				read -r -p "Your choose: " response1
				case "$response1" in
					  [2])
							clear
							printf "${green}\n  @ RECOVERY MENU \n\n"
							printf "${green} -> Reinstall Kali-Linux \n\n"
							printf "${yellow} @ Reinstall will lost your data\n\n"
							read -r -p "Are you sure to reinstall Kali-Linux? [Y/N] " response
							printf "%b\n" " "
							case "$response" in
								[y]|[Y]) 
									cd $HOME
									rm -rf kali-arm64 2> /dev/null
									wget -O kali-khanhnguyen.sh https://tinyurl.com/ybw4xpmz 2> /dev/null
									chmod +x ~/kali-khanhnguyen.sh 2> /dev/null
									sh ~/kali-khanhnguyen.sh && echo "Process ended!"
									printf "%b" "\n\n"
									;;
								*)
									;;
							esac
							break
				             ;;
					  [1]) 
							clear
							printf "${green}\n  @ RECOVERY MENU \n\n"
							printf "${green} -> Reinstall Kali-Linux \n\n"
							printf "${yellow} @ Reinstall will keep your data\n\n"
							read -r -p "Are you sure to reinstall Kali-Linux? [Y/N] " response
							printf "%b\n" " "
							case "$response" in
								[y]|[Y]) 
									cd $HOME
									wget -O kali-khanhnguyenup.sh https://tinyurl.com/9fzu2ex9 2> /dev/null
									chmod +x ~/kali-khanhnguyenup.sh 2> /dev/null
									sh ~/kali-khanhnguyenup.sh && echo "Process ended!"
									printf "%b" "\n\n"
									;;
								*)
									;;
							esac
							break
				             ;;
					   [3])
							clear
							;;
						*)
							;;
				esac
				break
				;;
			"Backup Image")  
				clear
				printf "${red}\n  @ RECOVERY MENU \n\n"
				printf "${green} -> Backup Image \n\n"
				printf "${yellow} @ Default location backup is /sdcard \n\n"
				printf "${yellow} @@ High level may take a long time, recommend is 0 \n\n"
				read -p "Compress level (0-9): " level
                printf "%b\n" "\n-----------------\n\n"
				printf "${blue} Target Backup: /sdcard/kali-arm64-backup.tar.xz \n"
				read -r -p "Are you sure to backup image? [Y/N] " response
				printf "%b\n" " "
				case "$response" in
					[y]|[Y]) 
							cd $HOME
							if [ -f kali-arm64-backup.tar.xz ]; then
								rm -f kali-arm64-backup.tar.xz
							fi
							XZ_OPT=-$level tar cJf - ~/kali-arm64 -P | pv -s $(du -sb kali-arm64 | awk '{print $1}') | gzip > kali-arm64-backup.tar.xz && echo "- Done backup image" > /sdcard/log.txt
							if [ -f kali-arm64-backup.tar.xz ]; then
								7z e kali-arm64-backup.tar.xz
							else
								printf "%b\n" " ${red} - Backup image failed! \n"
								exit 1
							fi
							if [ -f kali-arm64-backup.tar ]; then
								if [ -f kali-arm64-backup.tar.xz ]; then
									rm -f kali-arm64-backup.tar.xz
								fi
								mv kali-arm64-backup.tar kali-arm64-backup.tar.xz
								mv kali-arm64-backup.tar.xz /sdcard/kali-arm64-backup.tar.xz
							else
								printf "%b\n" " ${red} - Backup image failed! \n"
								rm -f kali-arm64-backup.tar.xz
								exit 1
							fi
							clear
							printf "${red}\n  @ RECOVERY MENU \n\n"
							printf "${green} -> Backup Image \n\n"
							printf "${yellow} @ Default location backup is /sdcard \n\n"
							cd $HOME
							if [ -f /sdcard/kali-arm64-backup.tar.xz ]; then
								printf "%b\n" " ${yellow} - Completed Backup Image! \n"
							else
								printf "%b\n" " ${red} - Backup image failed! \n"
								rm -f kali-arm64-backup.tar.xz
								rm -f kali-arm64-backup.tar
								exit 1
							fi
							read -p " Press Enter to exit " anykey
							;;
						*)
							;;
				esac
				break
				;;
			"Restore Image")
                clear
				printf "${red}\n  @ RECOVERY MENU \n\n"
                printf "${green} -> Restore Image \n\n"
                printf "${yellow} @ Please move Image to /sdcard and enter name file \n\n"
				printf "${yellow}  @@ Example your file in /sdcard/kali-arm64.tar.xz \n"
                printf "${yellow}  @@ Enter name image: kali-arm64.tar.xz \n\n"
                read -p "Enter Full name image: " restoreimage
				checkfile=/sdcard/$restoreimage
                printf "%b\n" "\n-----------------\n\n"
				printf "${blue} Target Image: /sdcard/$restoreimage \n"
				printf "${red}  @@@ Restore Image will erase current data! \n\n"
                read -r -p "Are you sure to restore image? [Y/N] " response
                case "$response" in
                      [y]|[Y]) 
                             printf "%b\n" "${yellow}\n -- Restore Image is in progress, please wait.... \n"
							 if [ -f $checkfile ]; then
					  			 printf "${green} restore image exist! \n"
								 rm -rf ~/kali-arm64 2> /dev/null
							 else
					  			 printf "${red} restore image not exist! \n"
					  			 printf "${red} Please check path restore image file! \n"
								 exit 1
							 fi
							 printf "${yellow}\n -Preparing.... \n"
							 cd $HOME
							 cp /sdcard/$checkfile restore-khanhnguyen.tar.xz
							 wget -O restore-kali-khanhnguyen.sh https://tinyurl.com/37fhdpjb 2> /dev/null
							 chmod +x ~/restore-kali-khanhnguyen.sh 2> /dev/null
							 sh ~/restore-kali-khanhnguyen.sh && echo " - Process ended!"
							 rm -f restore-kali-khanhnguyen.sh 2> /dev/null && rm -f restore-khanhnguyen 2> /dev/null && rm -f restore-khanhnguyen.tar.xz 2> /dev/null
							 clear
							 printf "${red}\n  @ RECOVERY MENU \n\n"
							 printf "${green} -> Restore Image \n\n\n\n"
							 printf "${blue} Restore completed! ${reset}\n\n"
							 read -p "Press Enter to exit" anykey
                             ;;
                       *)
                             ;;
                esac
                break
                ;;
            "KhanhNguyen9872")
                clear
				printf "${red}\n  @ RECOVERY MENU \n\n"
                printf "${green} -> KhanhNguyen9872 \n\n\n"
				printf "${yellow} Name: Nguyen Van Khanh \n"
				printf " Facebook: https://fb.me/khanh10a1 \n"
				printf " Youtube: https://www.youtube.com/channel/UC8didcLVaL4iTfbuWBGv51w \n"
				printf " Github: https://github.com/KhanhNguyen9872 \n"
				printf " Instagram: khanh10a1 \n\n"
				read -p " Press Enter to exit" anykey
                break
                ;;
            "Uninstall Kali-Linux")
                clear
				printf "${red}\n  @ RECOVERY MENU \n\n"
                printf "${green} -> Uninstall Kali-Linux \n\n"
				printf "${yellow} 1. Remove Kali-Linux with recovery \n"
				printf "${yellow} 2. Remove Kali-Linux without recovery \n"
				printf "${yellow} 3. Return to menu \n"
				read -r -p "Your choose: " response1
				case "$response1" in
					  [2])
							clear
							printf "${red}\n  @ RECOVERY MENU \n\n"
							printf "${green} -> Uninstall Kali-Linux \n\n"
							printf "${red} @ WARNING: Uninstall Kali-Linux without recovery! \n"
							read -r -p "Are you sure to uninstall Kali? [Y/N] " response
							case "$response" in
								[y]|[Y]) 
										cd $HOME
										rm -rf ~/kali-arm64
										cd ..
										cd usr
										cd bin
										rm -f kali
										rm -f version
										rm -f versionrestore
										printf "%b\n" "${yellow} Completed uninstall Kali-Linux! \n"
										read -p "Press Enter to exit" anykey
										;;
									*)
										;;
							esac
				             ;;
					  [1]) 
							clear
							printf "${red}\n  @ RECOVERY MENU \n\n"
							printf "${green} -> Uninstall Kali-Linux \n\n"
							printf "${red} @ WARNING: Uninstall Kali-Linux with recovery! \n"
							read -r -p "Are you sure to uninstall Kali? [Y/N] " response
							case "$response" in
								[y]|[Y]) 
										cd $HOME
										rm -rf ~/kali-arm64
										cd ..
										cd usr
										cd bin
										rm -f kali
										rm -f version
										rm -f versionrecovery
										rm -f recovery
										rm -f versionrestore
										printf "%b\n" "${yellow} Completed uninstall Kali-Linux! \n"
										printf "%b\n" "${red} Recovery will now exit! \n"
										menu=1
										exit 0
										;;
									*)
										;;
							esac
				             ;;
					   [3])
							clear
							;;
						*)
							;;
				esac
				break
                ;;
            "Exit" )
				clear
				printf "%b\n" "${green} \n\n - Good bye! \n"
                menu=1
				exit 0
                ;;
            * )
                break
                ;;
        esac
    done
done
exit 0
