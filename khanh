#!/bin/bash
red='\033[1;31m' 2> /dev/null
green='\033[1;32m' 2> /dev/null
yellow='\033[1;33m' 2> /dev/null
light_cyan='\033[1;96m' 2> /dev/null
reset='\033[0m' 2> /dev/null
function secure-vnc() {
    SECUREVNC="yes"
    return 0
}

function start-vnc() {
    printf "%b\n" "${yellow} @ Starting VNC....\n${reset}"
    wget -O 1 "https://raw.githubusercontent.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/main/app/KhanhNguyen9872" 2> /dev/null
    khanhcheckin="$(grep '' './1')" 2> /dev/null && rm -f ./1 2> /dev/null
    if [ ! -f ~/.vnc/passwd ] 2> /dev/null; then
        passwd-vnc
    fi
    USR=$(whoami) 2> /dev/null
    if [ $USR == "root" ] 2> /dev/null; then
        SCREEN=":1" 2> /dev/null && echo 'khanh' > /tmp/screen1 2> /dev/null
    else
        SCREEN=":0" 2> /dev/null && echo 'khanh' > /tmp/screen0 2> /dev/null
    fi 
    export DISPLAY=${SCREEN}; export HOME=${HOME}; export USER=${USR}; LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgcc_s.so.1 nohup vncserver $SCREEN -localhost $SECUREVNC >/dev/null 2>&1 </dev/null
    starting_kex=1 2> /dev/null
    return 0
}

function stop-vnc() {
    printf "%b\n" "${light_cyan} @ Kali-Linux by KhanhNguyen @${reset}"
    printf "%b\n" "${yellow} @ Stopping VNC....${reset}\n"
    vncserver -kill :0 2> /dev/null && rm -f /tmp/screen0 2> /dev/null
    vncserver -kill :1 2> /dev/null && rm -f /tmp/screen1 2> /dev/null
    printf "\n"
    SECUREVNC="no" 2> /dev/null
    return 0
}

function passwd-vnc() {
    vncpasswd
    return 0
}

function status-vnc() {
    unset khanhsecure
    sessions="$(vncserver -list)" 2> /dev/null
    if [[ $khanhcheckin -eq "" ]] 2> /dev/null; then
        securekhanh="(No Internet)" 2> /dev/null
    else
        if [ $SECUREVNC == "no" ] 2> /dev/null; then
            if [ -f /tmp/screen0 ] 2> /dev/null; then
                securekhanh="// $(khanhip):5900" 2> /dev/null
            fi
            if [ -f /tmp/screen1 ] 2> /dev/null; then
                securekhanh="// $(khanhip):5901" 2> /dev/null
            fi
        else
            securekhanh="(SECURE is enabled)" 2> /dev/null
        fi
    fi
    if [[ $sessions == *"590"* ]] 2> /dev/null; then
        printf "\n${light_cyan} @ VNC Server is started! \n"
        if [ -f /tmp/screen0 ] 2> /dev/null; then
            echo "IP: 127.0.0.1:5900 ${securekhanh}"
			rm -f /tmp/screen0 2> /dev/null
        fi
        if [ -f /tmp/screen1 ] 2> /dev/null; then
            echo "IP: 127.0.0.1:5901 ${securekhanh}"
			rm -f /tmp/screen1 2> /dev/null
        fi
        echo "Download 'VNC Viewer' and use this IP"
        printf "${green}\n @ Starting PulseAudio at 127.0.0.1:8000\n"
		if [ -f /etc/pulse/client.conf ] 2> /dev/null; then
			rm -f /etc/pulse/client.conf 2> /dev/null
			rm -f /etc/pulse/client.conf.d 2> /dev/null
			rm -rf /etc/pulse/client.conf 2> /dev/null
			rm -rf /etc/pulse/client.conf.d 2> /dev/null
		fi
		if [ -f /bin/pulseaudio ] 2> /dev/null; then
			pulseaudio --start 2> /dev/null
			khanhaudio_tcp 2> /dev/null
			echo "Pulse Audio is started!"
			echo "IP: 127.0.0.1:8000"
			echo "Download 'Audio' app in Github and use this IP"
                        echo "If audio not work, force-stop Termux and try again!"
			echo " "
		else
			printf "${red}PulseAudio is not installed\n"
			printf "Use: 'sudo apt install pulseaudio' to install it!\n${reset}"
			echo " "
		fi
                if [ -f /bin/virtmic ]; then
                    if [ -f /bin/virtualmic ]; then
                        printf "${light_cyan}"
                        echo "If you want to use Microphone"
                        echo "Download 'Micro' app in Github and open it"
                        echo "Tick 'RTSP', change Port to 8080 and press 'Start'"
                        echo "Open Kali-Linux Terminal, type 'virtualmic' and Enter"
                        echo "Now you can use Microphone!"
                        echo "Don't forget change 'Microphone Devices' in your application"
                        echo ""
                        printf "${reset}"
                    else
                        printf "${reset}"
                    fi
                else
                    printf "${reset}"
                fi
    else
        if [ ! -z $starting_kex ]; then
            printf "${red}\nError starting the VNC Server.\nPlease try 'kali khanh stop' or restart your termux.\n\n${reset}"
        fi
    fi
    return 0
}

case $1 in
    secure)
        stop-vnc
        secure-vnc
        start-vnc
        status-vnc
        ;;
    start)
        start-vnc
        ;;
    stop)
        stop-vnc
        ;;
    status)
        status-vnc
        ;;
    passwd)
        passwd-vnc
        ;;
    *)
        stop-vnc
        start-vnc
        status-vnc
        ;;
esac
