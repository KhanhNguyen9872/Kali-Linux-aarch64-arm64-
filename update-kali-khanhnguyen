#!/data/data/com.termux/files/usr/bin/bash -e

cd 2> /dev/null
wget -O image_parts https://raw.githubusercontent.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/main/image_parts 2> /dev/null
split_file="$(grep '' './image_parts')" 2> /dev/null
rm -f ./image_parts 2> /dev/null

if [ ! -f ../usr/bin/sshd ]; then
	pkg install openssh -y
	clear
fi

if [ ! -f ../usr/bin/tamp ]; then
	pkg install git -y
	git clone https://github.com/KhanhNguyen9872/Tamp.git 2> /dev/null
	cd Tamp 2> /dev/null
	bash install.sh
	cd 2> /dev/null
	rm -rf Tamp 2> /dev/null
	echo "echo '(KhanhNguyen9872)'" >> ~/.bash_profile
	echo "echo 'phpmyadmin: tamp -start | tamp -stop'" >> ~/.bash_profile
	echo "echo ''" >> ~/.bash_profile
	clear
fi

rm -f kali-khanhnguyenup.sh

VERSION=20220204
USERNAME="kali"

function ask() {
    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        printf "${light_cyan}\n[?] "
        read -p "$1 [$prompt] " REPLY

        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        printf "${reset}"

        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}

function get_arch() {
    printf "${blue}[*] Kiem tra CPU...."
    case $(getprop ro.product.cpu.abi) in
        arm64-v8a)
            SYS_ARCH=arm64
			printf " ARCH: $(getprop ro.product.cpu.abi) (aarch64)"
            ;;
        armeabi|armeabi-v7a)
			printf " ARCH: $(getprop ro.product.cpu.abi) (armhf)"
			printf " @ Unsupported CPU"
			exit 1
            ;;
        *)
			printf " ARCH: $(getprop ro.product.cpu.abi) (unknown))"
			printf "\n\n\n @ Unsupported CPU \n"
			exit 1
            ;;
    esac
}

function set_strings() {
    CHROOT="kali-arm64"
    IMAGE_NAME="kali-arm64-khanhnguyen.tar.xz"
    SHA_NAME="kali-arm64-khanhnguyen.sha512sum"
}    

function prepare_fs() {
    unset KEEP_CHROOT
    KEEP_CHROOT=1
} 

function cleanup() {
    if [ -f ${IMAGE_NAME} ]; then
		rm -f ${IMAGE_NAME}
        rm -f ${SHA_NAME}
		printf " - Da cai dat xong!"
    fi
} 

function check_dependencies() {
    printf "${blue}\n[*] Dang kiem tra....${reset}\n"
    apt-get update -y &> /dev/null || apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" dist-upgrade -y &> /dev/null
    apt-get upgrade -y &> /dev/null
    printf "${blue}[*] - Done ${reset}\n"
}


function get_url() {
    ROOTFS_URL="https://github.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/releases/download/20211012/kali-arm64-khanhnguyen.img"
    SHA_URL="https://tinyurl.com/xb7jsx2x"
    ROOTFS_URL_PART00="https://github.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/releases/download/20211012/kali-arm64-khanhnguyen.7z.001"
    ROOTFS_URL_PART01="https://github.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/releases/download/20211012/kali-arm64-khanhnguyen.7z.002"
}

function get_rootfs() {
    unset KEEP_IMAGE
    if [ -f ${IMAGE_NAME} ]; then
        rm -f ${IMAGE_NAME}
    fi
    if [[ $split_file -eq 0 ]]; then
    	printf "${blue}[*] Dang tai Kali-Linux (arm64)...."
    	printf " (1.85GB)${reset}\n\n"
    	get_url
    	wget -O kali-arm64-khanhnguyen.img "$ROOTFS_URL" && echo "- Get success"
    else
    	printf "${blue}[*] Dang tai Kali-Linux (arm64)...."
    	printf "${red}\n File lon hon 2GB\n"
	printf "Tien hanh tai file theo tung part!\n\n${reset}"
    	get_url
    	wget -O kali-arm64-khanhnguyen.7z.001 "$ROOTFS_URL_PART00" || :
	wget -O kali-arm64-khanhnguyen.7z.002 "$ROOTFS_URL_PART01" || :
	if [ ! -f kali-arm64-khanhnguyen.7z.001 ] && [ ! -f kali-arm64-khanhnguyen.7z.002 ]; then
		printf "\nFile Error!\n"
		exit 1
	else
		7z e kali-arm64-khanhnguyen.7z.001
		if [ -f kali-arm64-backup.img ]; then
			rm -f kali-arm64-khanhnguyen.7z.001 2> /dev/null && rm -f kali-arm64-khanhnguyen.7z.002 2> /dev/null
			mv kali-arm64-backup.img kali-arm64-khanhnguyen.img 2> /dev/null
		else
			rm -f kali-arm64-khanhnguyen.7z.001 2> /dev/null && rm -f kali-arm64-khanhnguyen.7z.002 2> /dev/null
			printf "\nFile Error!\n"
			exit 1
		fi
	fi
    fi
}

function get_sha() {
    if [ -f ${SHA_NAME} ]; then
		rm -f ${SHA_NAME}
    fi
    wget -O kali-arm64-khanhnguyen.sha512sum "${SHA_URL}" 2> /dev/null
}

function verify_sha() {
	clear
	printf "${blue}##################################################\n"
	printf "${blue}##                                              ##\n"
	printf "${blue}##  88      a8P         db        88        88  ##\n"
	printf "${blue}##  88    .88'         d88b       88        88  ##\n"
	printf "${blue}##  88   88'          d8''8b      88        88  ##\n"
	printf "${blue}##  88 d88           d8'  '8b     88        88  ##\n"
	printf "${blue}##  8888'88.        d8YaaaaY8b    88        88  ##\n"
	printf "${blue}##  88P   Y8b      d8''''''''8b   88        88  ##\n"
	printf "${blue}##  88     '88.   d8'        '8b  88        88  ##\n"
	printf "${blue}##  88       Y8b d8'          '8b 888888888 88  ##\n"
	printf "${blue}##                                              ##\n"
	printf "${blue}##                 arm64-v8a by KhanhNguyen9872 ##\n"
	printf "${blue}##################################################${reset}\n\n"
        printf "\n${blue}[*] Dang kiem tra file cai dat....${reset}\n"
        sha512sum -c $SHA_NAME || {
            printf "${red} File cai dat bi hong. Vui long cai lai \n${reset}"
	    rm -f $SHA_NAME 2> /dev/null
	    rm -f $IMAGE_NAME 2> /dev/null
	    rm -f install-kali-khanhnguyen 2> /dev/null
	    rm -f update-kali-khanhnguyen 2> /dev/null
            exit 1
        }
	rm -f $SHA_NAME
}

function extract_rootfs() {
        printf "\n${blue}[*] Dang update Kali-Linux (arm64).... ${reset}\n"
		printf "\n${blue}    @@ Qua trinh co the mat kha nhieu thoi gian @@ ${reset}\n"
		printf "\n${red}             @@ Tam 8-30 phut @@ ${reset}\n\n"
		mv kali-arm64-khanhnguyen.img kali-arm64-khanhnguyen.tar.xz
		proot --link2symlink tar -xJf $IMAGE_NAME 2> /dev/null || :
		rm -f $IMAGE_NAME 2> /dev/null
		wget -O version https://tinyurl.com/53n7htrn 2> /dev/null && echo "- Updating version..."
		mv version ${PREFIX}/bin/version 2> /dev/null
		chmod 777 ${PREFIX}/bin/version 2> /dev/null
		echo 'update_enable' > ${PREFIX}/bin/settingsupdate 2> /dev/null
		echo 'update_enable' > ${PREFIX}/bin/settingsupdatekali 2> /dev/null
		chmod 777 ${PREFIX}/bin/settingsupdate 2> /dev/null
		chmod 777 ${PREFIX}/bin/settingsupdatekali 2> /dev/null
}


function create_launcher() {
    KH_RECOVERY=$HOME/kali-arm64/usr/bin/recovery
    NH_LAUNCHER=${PREFIX}/bin/kali
    NH_SHORTCUT=${PREFIX}/bin/nh
    KEX_LAUNCHER=$HOME/kali-arm64/usr/bin/khanh
    wget -O kali https://raw.githubusercontent.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/main/kali
    mv kali ${PREFIX}/bin/kali
    chmod 777 ${PREFIX}/bin/kali
	
	cat > $KH_RECOVERY <<- EOF
##!/data/data/com.termux/files/usr/bin/bash -e
red='\033[1;31m'
printf "%b\n" "${red}\n Please exit Kali-Linux and run 'recovery' in Termux \n\n"
	EOF

    chmod 777 $NH_LAUNCHER
    chmod 777 $KH_RECOVERY
    chmod 777 $KEX_LAUNCHER
    if [ -L ${NH_SHORTCUT} ]; then
        rm -f ${NH_SHORTCUT}
    fi
    if [ ! -f ${NH_SHORTCUT} ]; then
        ln -s ${NH_LAUNCHER} ${NH_SHORTCUT} >/dev/null
    fi
}

function fix_profile_bash() {
    if [ -f ${CHROOT}/root/.bash_profile ]; then
        sed -i '/if/,/fi/d' "${CHROOT}/root/.bash_profile"
    fi
}

function fix_sudo() {
    chmod +s $CHROOT/usr/bin/sudo
    chmod +s $CHROOT/usr/bin/su
	echo "kali    ALL=(ALL:ALL) ALL" > $CHROOT/etc/sudoers.d/kali

    echo "Set disable_coredump false" > $CHROOT/etc/sudo.conf
}

function fix_uid() {
    USRID=$(id -u)
    GRPID=$(id -g)
    nh -r usermod -u $USRID kali 2>/dev/null
    nh -r groupmod -g $GRPID kali 2>/dev/null
}

function installapp_khanh() {
    cd 2> /dev/null
    rm -rf /sdcard/tmp 2> /dev/null
    wget -O audio.apk "https://github.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/blob/main/app/Audio.apk?raw=true" 2> /dev/null
    wget -O micro.apk "https://github.com/KhanhNguyen9872/Kali-Linux-aarch64-arm64-/blob/main/app/Micro.apk?raw=true" 2> /dev/null
    clear
    echo ""
    echo "Is anyone here? (Co ai o day khong?)"
    read -p "Press Enter to continue!" anykey
    mkdir /sdcard/tmp 2> /dev/null
    mv audio.apk /sdcard/tmp/audio.apk 2> /dev/null
    mv micro.apk /sdcard/tmp/micro.apk 2> /dev/null
    echo ""
    printf " Installing Audio app....."
    echo ""
    termux-open /sdcard/tmp/audio.apk
    read -p "Press Enter to continue!" anykey
    printf " Installing Micro app....."
    echo ""
    termux-open /sdcard/tmp/micro.apk
    read -p "Press Enter to continue!" anykey
    rm -rf /sdcard/tmp
}

function print_banner() {
    clear
    printf "${blue}##################################################\n"
    printf "${blue}##                                              ##\n"
    printf "${blue}##  88      a8P         db        88        88  ##\n"
    printf "${blue}##  88    .88'         d88b       88        88  ##\n"
    printf "${blue}##  88   88'          d8''8b      88        88  ##\n"
    printf "${blue}##  88 d88           d8'  '8b     88        88  ##\n"
    printf "${blue}##  8888'88.        d8YaaaaY8b    88        88  ##\n"
    printf "${blue}##  88P   Y8b      d8''''''''8b   88        88  ##\n"
    printf "${blue}##  88     '88.   d8'        '8b  88        88  ##\n"
    printf "${blue}##  88       Y8b d8'          '8b 888888888 88  ##\n"
    printf "${blue}##                                              ##\n"
    printf "${blue}##                 arm64-v8a by KhanhNguyen9872 ##\n"
    printf "${blue}##################################################${reset}\n\n"
}


##################################
##              Main            ##

red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
light_cyan='\033[1;96m'
reset='\033[0m'

EXTRA_ARGS=""
if [[ ! -z $1 ]]; then
    EXTRA_ARGS=$1
    if [[ $EXTRA_ARGS != "--insecure" ]]; then
        EXTRA_ARGS=""
    fi
fi

cd $HOME
print_banner
get_arch
set_strings
prepare_fs
check_dependencies
get_rootfs
get_sha
verify_sha
extract_rootfs
create_launcher
cleanup

printf "\n${blue}[*] Dang config Kali-Linux (arm64)....\n"
fix_profile_bash
fix_sudo
create_kex_launcher
fix_uid
installapp_khanh

print_banner
printf "${yellow}[=] Kali-Linux KhanhNguyen da duoc update${reset}\n\n"
printf "${red}[@] Password VNC:  khanhnguyen ${reset}\n"
printf "${red}[@] Password su:   khanhnguyen ${reset}\n"
printf "${light_cyan} Github: https://github.com/khanhnguyen9872${reset}\n"
printf "%b\n" " "
printf "${green}[+] Thong tin lenh, type:${reset}\n"
printf "${green}[+] kali                   # Start Kali-Linux chroot${reset}\n"
printf "${green}[+] kali khanh --start     # Start Kali-Linux VNC Viewer${reset}\n"
printf "${green}[+] kali khanh --kill      # Kill Kali-Linux VNC Viewer${reset}\n"
printf "${green}[+] kali su                # Run Kali-Linux as root user${reset}\n"
printf "${green}[+] kali khanhnguyen9872   # Get Information this Kali-Linux${reset}\n"
printf "${green}[+] recovery               # Run Recovery Mode${reset}\n\n"
rm -f ~/update-kali-khanhnguyen
exit 0
