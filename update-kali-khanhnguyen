#!/data/data/com.termux/files/usr/bin/bash -e

VERSION=20211012
USERNAME="kali"

function ask() {
    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        printf "${light_cyan}\n[?] "
        read -p "$1 [$prompt] " REPLY

        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        printf "${reset}"

        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac
    done
}

function get_arch() {
    printf "${blue}[*] Kiem tra CPU...."
    case $(getprop ro.product.cpu.abi) in
        arm64-v8a)
            SYS_ARCH=arm64
			printf " ARCH: $(getprop ro.product.cpu.abi) (aarch64)"
            ;;
        armeabi|armeabi-v7a)
			printf " ARCH: $(getprop ro.product.cpu.abi) (armhf)"
			printf " @ Unsupported CPU"
			exit 1
            ;;
        *)
			printf " ARCH: $(getprop ro.product.cpu.abi) (unknown))"
			printf " @ Unsupported CPU"
			exit 1
            ;;
    esac
}

function set_strings() {
    CHROOT=kali-arm64
    IMAGE_NAME=kali-arm64-khanhnguyen.tar.xz
    SHA_NAME=kali-arm64-khanhnguyen.sha512sum
}    

function prepare_fs() {
    unset KEEP_CHROOT
    KEEP_CHROOT=1
} 

function cleanup() {
    if [ -f ${IMAGE_NAME} ]; then
		rm -f ${IMAGE_NAME}
        rm -f ${SHA_NAME}
		printf " - Da cai dat xong!"
    fi
} 

function check_dependencies() {
    printf "${blue}\n[*] Dang kiem tra....${reset}\n"
    apt-get update -y &> /dev/null || apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" dist-upgrade -y &> /dev/null
    apt-get upgrade -y &> /dev/null
    printf "${blue}[*] - Done ${reset}\n"
}


function get_url() {
    ROOTFS_URL="https://tinyurl.com/nx64mce5"
    SHA_URL="https://tinyurl.com/xb7jsx2x"
}

function get_rootfs() {
    unset KEEP_IMAGE
    if [ -f ${IMAGE_NAME} ]; then
        rm -f ${IMAGE_NAME}
    fi
    printf "${blue}[*] Dang tai Kali-Linux (arm64)...."
    printf " (1.44GB)${reset}\n\n"
    get_url
    wget -O kali-arm64-khanhnguyen.tar.xz "$ROOTFS_URL" && echo "- Get success"
}

function get_sha() {
    if [ -f ${SHA_NAME} ]; then
		rm -f ${SHA_NAME}
    fi
    wget -O kali-arm64-khanhnguyen.sha512sum "${SHA_URL}"
}

function verify_sha() {
	clear
	printf "${blue}##################################################\n"
	printf "${blue}##                                              ##\n"
	printf "${blue}##  88      a8P         db        88        88  ##\n"
	printf "${blue}##  88    .88'         d88b       88        88  ##\n"
	printf "${blue}##  88   88'          d8''8b      88        88  ##\n"
	printf "${blue}##  88 d88           d8'  '8b     88        88  ##\n"
	printf "${blue}##  8888'88.        d8YaaaaY8b    88        88  ##\n"
	printf "${blue}##  88P   Y8b      d8''''''''8b   88        88  ##\n"
	printf "${blue}##  88     '88.   d8'        '8b  88        88  ##\n"
	printf "${blue}##  88       Y8b d8'          '8b 888888888 88  ##\n"
	printf "${blue}##                                              ##\n"
	printf "${blue}##                 arm64-v8a by KhanhNguyen9872 ##\n"
	printf "${blue}##################################################${reset}\n\n"
        printf "\n${blue}[*] Dang kiem tra file cai dat....${reset}\n"
        sha512sum -c $SHA_NAME || {
            printf "${red} File cai dat bi hong. Vui long cai lai \n${reset}"
            exit 1
        }
}

function extract_rootfs() {
        printf "\n${blue}[*] Dang update Kali-Linux (arm64).... ${reset}\n"
		printf "\n${blue}    @@ Qua trinh co the mat kha nhieu thoi gian @@ ${reset}\n"
		printf "\n${red}             @@ Tam 5-15 phut @@ ${reset}\n\n"
		proot --link2symlink tar -xf $IMAGE_NAME 2> /dev/null || :
		wget -O version https://tinyurl.com/53n7htrn 2> /dev/null && echo "- Updating version..."
		mv version ${PREFIX}/bin/version 2> /dev/null
		chmod 777 ${PREFIX}/bin/version 2> /dev/null
}


function create_launcher() {
    KH_RECOVERY=$HOME/kali-arm64/usr/bin/recovery
    NH_LAUNCHER=${PREFIX}/bin/kali
    NH_SHORTCUT=${PREFIX}/bin/nh
    KEX_LAUNCHER=$HOME/kali-arm64/usr/bin/khanh
    cat > $NH_LAUNCHER <<- EOF
#!/data/data/com.termux/files/usr/bin/bash -e
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
light_cyan='\033[1;96m'
reset='\033[0m'
clear
cd
cd ..
khanh=usr/bin/khanh
if [ -f $khanh ]; then
	left=4
	khanh1="$(grep '' './usr/bin/khanh')"
	while [[ $left -eq 4 ]] || [[ $left -eq 3 ]] || [[ $left -eq 2 ]] || [[ $left -eq 1 ]]; do
		clear
		if [[ $wrong -eq 1 ]]; then
			printf "\n ${red} - Wrong Password! $left attempts left! ${reset}\n\n"
		fi
		if [[ $left -eq 0 ]]; then
			clear
			printf "\n\n ${red} - Wrong Password! Exit! ${reset}\n\n"
			exit 0
		fi
		printf "${light_cyan}\n   Type your Password! ${reset}\n\n"
		read -p "Password: " anykey
		if [[ $anykey -eq $khanh1 ]] 2> /dev/null || [ $anykey = $khanh1 ] 2> /dev/null; then
			printf "\n ${yellow} - PASS! ${reset}\n"
			newpass=1
			break
		else
			wrong=1
			left=$((left-1))
		fi
	done
	if [[ $left -eq 0 ]]; then
		clear
		printf "\n\n ${red} - Wrong Password! Exit! ${reset}\n\n"
		exit 0
	fi
fi
clear
printf "\033[1;34m##################################################\n"
printf "\033[1;34m##                                              ##\n"
printf "\033[1;34m##  88      a8P         db        88        88  ##\n"
printf "\033[1;34m##  88    .88'         d88b       88        88  ##\n"
printf "\033[1;34m##  88   88'          d8''8b      88        88  ##\n"
printf "\033[1;34m##  88 d88           d8'  '8b     88        88  ##\n"
printf "\033[1;34m##  8888'88.        d8YaaaaY8b    88        88  ##\n"
printf "\033[1;34m##  88P   Y8b      d8''''''''8b   88        88  ##\n"
printf "\033[1;34m##  88     '88.   d8'        '8b  88        88  ##\n"
printf "\033[1;34m##  88       Y8b d8'          '8b 888888888 88  ##\n"
printf "\033[1;34m##                                              ##\n"
printf "\033[1;34m##                 arm64-v8a by KhanhNguyen9872 ##\n"
printf "\033[1;34m##################################################\033[0m\n\n"
printf "\033[1;33m[=] Kali-Linux KhanhNguyen (Thanks<3)\033[0m\n\n"
printf "\033[1;31m[@] Password VNC:  khanhnguyen \033[0m\n"
printf "\033[1;31m[@] Password su:   khanhnguyen \033[0m\n"
printf "\033[1;31m[@] Password sudo: khanhnguyen \033[0m\n\n"
printf "\033[1;32m[+] Thong tin lenh, type:\033[0m\n"
printf "\033[1;32m[+] khanh            # Start Kali-Linux VNC Viewer\033[0m\n"
printf "\033[1;32m[+] khanh stop       # Stop Kali-Linux VNC Viewer\033[0m\n"
printf "\033[1;32m[+] su               # Run Kali-Linux as root user\033[0m\n"
printf "\033[1;32m[+] khanhnguyen9872  # Get Information this Kali-Linux\033[0m\n"
printf "\033[1;32m[+] recovery         # Run Recovery Mode\033[0m\n\n"
cd ${HOME}
unset LD_PRELOAD
if [ ! -f kali-arm64/root/.version ]; then
    touch kali-arm64/root/.version
fi

user="kali"
home="/home/$user"
start="sudo -u kali /bin/bash"

if grep -q "kali" kali-arm64/etc/passwd; then
    KALIUSR="1";
else
    KALIUSR="0";
fi
if [[ $KALIUSR == "0" || ("$#" != "0" && ("$1" == "-r" || "$1" == "-R")) ]];then
    user="root"
    home="/$user"
    start="/bin/bash --login"
    if [[ "$#" != "0" && ("$1" == "-r" || "$1" == "-R") ]];then
        shift
    fi
fi

cmdline="proot \
        --link2symlink \
        -0 \
        -r kali-arm64 \
        -b /dev \
        -b /data \
        -b /vendor \
        -b /product \
        -b /mnt \
        -b /storage \
        -b /sdcard \
        -b /system \
        -b /proc \
        -b kali-arm64$home:/dev/shm \
        -w $home \
           /usr/bin/env -i \
           HOME=$home \
           PATH=/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin \
           TERM=$TERM \
           LANG=C.UTF-8 \
           $start"

cmd="$@"
if [ "$#" == "0" ];then
    exec $cmdline
else
    $cmdline -c "$cmd"
fi
	EOF
	
	cat > $KH_RECOVERY <<- EOF
##!/data/data/com.termux/files/usr/bin/bash -e
red='\033[1;31m'
printf "%b\n" "${red}\n Please exit Kali-Linux and run 'recovery' in Termux \n\n"
	EOF

    chmod 777 $NH_LAUNCHER
    chmod 777 $KH_RECOVERY
    chmod 777 $KEX_LAUNCHER
    if [ -L ${NH_SHORTCUT} ]; then
        rm -f ${NH_SHORTCUT}
    fi
    if [ ! -f ${NH_SHORTCUT} ]; then
        ln -s ${NH_LAUNCHER} ${NH_SHORTCUT} >/dev/null
    fi
}

function fix_profile_bash() {
    if [ -f ${CHROOT}/root/.bash_profile ]; then
        sed -i '/if/,/fi/d' "${CHROOT}/root/.bash_profile"
    fi
}

function fix_sudo() {
    chmod +s $CHROOT/usr/bin/sudo
    chmod +s $CHROOT/usr/bin/su
	echo "kali    ALL=(ALL:ALL) ALL" > $CHROOT/etc/sudoers.d/kali

    echo "Set disable_coredump false" > $CHROOT/etc/sudo.conf
}

function fix_uid() {
    USRID=$(id -u)
    GRPID=$(id -g)
    nh -r usermod -u $USRID kali 2>/dev/null
    nh -r groupmod -g $GRPID kali 2>/dev/null
}

function print_banner() {
    clear
    printf "${blue}##################################################\n"
    printf "${blue}##                                              ##\n"
    printf "${blue}##  88      a8P         db        88        88  ##\n"
    printf "${blue}##  88    .88'         d88b       88        88  ##\n"
    printf "${blue}##  88   88'          d8''8b      88        88  ##\n"
    printf "${blue}##  88 d88           d8'  '8b     88        88  ##\n"
    printf "${blue}##  8888'88.        d8YaaaaY8b    88        88  ##\n"
    printf "${blue}##  88P   Y8b      d8''''''''8b   88        88  ##\n"
    printf "${blue}##  88     '88.   d8'        '8b  88        88  ##\n"
    printf "${blue}##  88       Y8b d8'          '8b 888888888 88  ##\n"
    printf "${blue}##                                              ##\n"
    printf "${blue}##                 arm64-v8a by KhanhNguyen9872 ##\n"
    printf "${blue}##################################################${reset}\n\n"
}


##################################
##              Main            ##

red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
light_cyan='\033[1;96m'
reset='\033[0m'

EXTRA_ARGS=""
if [[ ! -z $1 ]]; then
    EXTRA_ARGS=$1
    if [[ $EXTRA_ARGS != "--insecure" ]]; then
        EXTRA_ARGS=""
    fi
fi

cd $HOME
print_banner
get_arch
set_strings
prepare_fs
check_dependencies
get_rootfs
get_sha
verify_sha
extract_rootfs
create_launcher
cleanup

printf "\n${blue}[*] Dang config Kali-Linux (arm64)....\n"
fix_profile_bash
fix_sudo
create_kex_launcher
fix_uid

print_banner
printf "${yellow}[=] Kali-Linux KhanhNguyen da duoc update${reset}\n\n"
printf "${red}[@] Password VNC:  khanhnguyen ${reset}\n"
printf "${red}[@] Password su:   khanhnguyen ${reset}\n"
printf "${red}[@] Password sudo: khanhnguyen ${reset}\n"
printf "%b\n" " "
printf "${green}[+] Thong tin lenh, type:${reset}\n"
printf "${green}[+] kali                  # Start Kali-Linux chroot${reset}\n"
printf "${green}[+] kali khanh            # Start Kali-Linux VNC Viewer${reset}\n"
printf "${green}[+] kali khanh stop       # Stop Kali-Linux VNC Viewer${reset}\n"
printf "${green}[+] kali su               # Run Kali-Linux as root user${reset}\n"
printf "${green}[+] kali khanhnguyen9872  # Get Information this Kali-Linux${reset}\n"
printf "${green}[+] recovery              # Run Recovery Mode${reset}\n\n"
rm -f ~/update-kali-khanhnguyen
exit 0
